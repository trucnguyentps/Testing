trigger:
  branches:
    include:
    - main
    

pr: none

stages:
- stage: TerraformJobDev_Init_Plan
  displayName: Terraform Module - Init - Plan
  jobs:
    - job: TerraformJobDEV
      displayName: Terraform - CI Job - DEV
      pool:
        vmImage: ubuntu-latest
      steps:
        - script: |
                sudo apt install unzip
                sudo apt install azure-cli -y
                echo 'System.DefaultWorkingDirectory'
                ls
          name: setup_environment
          displayName: 'Setup TF Environment'

        - task: TerraformInstaller
          displayName: install terraform
          inputs:
            terraformVersion: latest

        - task: TerraformInstaller@0
          displayName: 'Terraform init'
          inputs:
            command: 'init'
            workingDirectory: $(System.DefaultWorkingDirectory)/examples/basic
            backendType: 'selfConfigured'
        - task: Bash@3
          displayName: Install pip
          inputs:
           targetType: 'inline'
           script: ' sudo apt install python2		-y '     
                  
        - task: Bash@3
          displayName: Install checkov
          inputs:
           targetType: 'inline'
           script: 'pip install checkov '
        
        - task: Bash@3
          displayName: Checkov source code scan  
          inputs:
            targetType: 'inline'
            workingDirectory: $(System.DefaultWorkingDirectory)/examples/basic
            script: 'checkov -d . -o junitxml > scan-result.xml'
          
           
        - task: PublishTestResults@2
          inputs:
            testResultsFormat: 'JUnit'
            searchFolder: '$(System.DefaultWorkingDirectory)/examples/basic'
            testResultsFiles: 'scan-result.xml'
            mergeTestResults: false
            testRunTitle: Checkov Dev workspace plan scan
            failTaskOnFailedTests: false
            publishRunAttachments: true
          displayName: Publish Test Resul 

        - task: Bash@3
          displayName: Install checkov
          inputs:
           targetType: 'inline'
           script: 'ls'          
        - task: PowerShell@2
          inputs:  
            targetType: 'inline'
            workingDirectory: $(System.DefaultWorkingDirectory)/examples/basic
            script: 'terraform plan'
  