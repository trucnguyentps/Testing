trigger:
  branches:
    include:
    - main
    - test-checkov

pr: none

stages:
- stage: TerraformJobDev_Init_Plan
  displayName: Terraform Module - Init - Plan
  jobs:
    - job: TerraformJobDEV
      displayName: Terraform - CI Job - DEV
      pool: pipeline
      steps:
        - script: |
                echo 'Default'
                cd $(System.DefaultWorkingDirectory)
                ls
                echo 'Start'
                cd $(System.DefaultWorkingDirectory)/examples/basic
                ls
          name: setup_environment
          displayName: 'Setup TF Environment'

        # - task: TerraformInstaller@0
        #   displayName: install terraform
        #   inputs:
        #     terraformVersion: latest

        - task: TerraformInstaller@0
          displayName: 'Terraform init'
          inputs:
            command: 'init'
            workingDirectory: $(System.DefaultWorkingDirectory)/examples/basic
            backendType: 'selfConfigured'
        
        - script: |
                echo 'System.DefaultWorkingDirectory'
                cd $(System.DefaultWorkingDirectory)/examples/basic
                ls
          name: setup_environment
          displayName: 'Setup TF Environment'
        # - task: Bash@3
        #   displayName: Install pip
        #   inputs:
        #    targetType: 'inline'
        #    script: ' sudo apt install python2 -y ' 
        - task: Bash@3
          displayName: Install checkov
          inputs:
           targetType: 'inline'
           script: 'pip install checkov '
        
        - task: Bash@3
          displayName: Checkov source code scan  
          inputs:
            targetType: 'inline'
            workingDirectory: $(System.DefaultWorkingDirectory)/examples/basic
            script: 'checkov -d . '
          # continueOnError: true
         
        - task: TerraformInstaller@0
          displayName: 'Terraform plan'
          inputs:
            command: 'plan'
            workingDirectory: $(System.DefaultWorkingDirectory)/examples/basic
            commandOptions: '-input=false -out=$(System.DefaultWorkingDirectory)/examples/basic/terraform.tfplan -detailed-exitcode'
            publishPlanResults: 'terraform_plan_results'
           
        # - task: PublishTestResults@2
        #   inputs:
        #     testResultsFormat: 'JUnit'
        #     searchFolder: '$(System.DefaultWorkingDirectory)/examples/basic'
        #     testResultsFiles: 'scan-result.xml'
        #     mergeTestResults: false
        #     testRunTitle: Checkov Dev workspace plan scan
        #     failTaskOnFailedTests: false
        #     publishRunAttachments: true
        #   displayName: Publish Test Resul 
